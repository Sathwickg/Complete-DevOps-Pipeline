- name: Add repo for java 8
  apt_repository: 
    repo: 'ppa:webupd8team/java' 
    state: present
  become: yes

- name: Set licence selected for oracle java 8
  shell: /bin/echo debconf shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
  become: yes

- name: Set licence seen for oracle java 8
  shell: /bin/echo debconf shared/accepted-oracle-license-v1-1 seen true | /usr/bin/debconf-set-selections
  become: yes

- name: Install java 8
  apt: 
    name: oracle-java8-installer 
    state: latest 
    update-cache: yes
  become: yes

- name: Add Jenkins key
  become: yes
  apt_key:
    url: https://pkg.jenkins.io/debian/jenkins.io.key
    state: present

- name: Add official APT repository
  become: yes
  apt_repository:
    repo: "deb https://pkg.jenkins.io/debian binary/"

- name: Install Jenkins
  become: yes
  apt:
    name: jenkins
    state: latest
    update_cache: yes

- name: Install packages
  apt: 
    name: "{{ item }}" 
    state: present
  with_items:
    - git
    - python-pip
    - python3-pip
    - maven
    - mysql-server
  become: yes

- name: Copy Jenkins' config file
  copy:
    src: ./roles/jenkins/files/jenkins
    dest: /etc/default/jenkins
    mode: 777
  become: yes

- name: Start Jenkins
  service:
    name: jenkins 
    state: restarted
  become: yes

- name: Wait for Jenkins to start
  wait_for:
    port: "{{ jenkins_port }}"
    delay: "{{ jenkins_delay }}"
    
- name: Copy Jenkins' config file
  copy:
    src: ./roles/jenkins/files/jenkins_config.xml
    dest: /var/lib/jenkins/config.xml
    mode: 777
  become: yes

- name: Allow Jenkins to run as the super user
  replace:
    path: /etc/default/jenkins
    regexp: '^JENKINS_USER=\$NAME' 
    replace: 'JENKINS_USER="root"'
  become: yes

- name: Start Jenkins
  service:
    name: jenkins 
    state: restarted
  become: yes

- name: Wait for Jenkins to restart
  wait_for:
    port: "{{ jenkins_port }}"
    delay: "{{ jenkins_delay }}"

- name: Download CLI jar
  get_url:
    url: "{{ jenkins_cli_jar }}"
    dest: "{{ jenkins_jar_location }}"
    mode: 777
  become: yes

- name: Install Jenkins Plugins
  command: java -jar "{{ jenkins_jar_location }}" -s "{{ jenkins_url }}" install-plugin "{{ item }}"
  with_items:
    - git
    - maven-plugin
    - envinject
    - jacoco
  become: yes

- name: Start Jenkins
  service:
    name: jenkins 
    state: restarted
  become: yes

- name: Wait for Jenkins to restart
  wait_for:
    port: "{{ jenkins_port }}"
    delay: "{{ jenkins_delay }}"

- name: Install Jenkins Job Builder
  pip: 
    name: "{{ item }}" 
    state: present
  with_items:
    jenkins-job-builder
    python-jenkins
  become: yes
    
- name: Create Jenkins job directory
  file:
    path: /etc/jenkins_jobs
    state: directory
    mode: 777
  become: yes

- name: Copy Jenkins jobs config
  copy:
    src: ./roles/jenkins/files/jenkins_jobs.ini
    dest: /etc/jenkins_jobs/jenkins_jobs.ini
    mode: 777
  become: yes

- name: Set environment variables
  blockinfile:
    path: /etc/environment
    block: |
      export GITHUB_EMAIL={{ lookup('env', 'GITHUB_EMAIL') }}
      export GITHUB_NAME={{ lookup('env', 'GITHUB_NAME') }}
      export GITHUB_USERNAME={{ lookup('env', 'GITHUB_USERNAME') }}
      export GITHUB_PASSWORD={{ lookup('env', 'GITHUB_PASSWORD') }}
      export MAIL_FROM="{{ lookup('env', 'MAIL_FROM') }}"
      export MAIL_USER="{{ lookup('env', 'MAIL_USER') }}"
      export MAIL_PASSWORD="{{ lookup('env', 'MAIL_PASSWORD') }}"
      export MAIL_SMTP="{{ lookup('env', 'MAIL_SMTP') }}"
    create: yes
    state: present
  become: yes
