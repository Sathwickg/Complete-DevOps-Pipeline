---
- name: Add repository for Java 8
  apt_repository: 
    repo: 'ppa:webupd8team/java' 
    state: present
  become: yes

- name: Set license selected for Oracle Java 8
  shell: /bin/echo debconf shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
  become: yes

- name: Set license seen for Oracle Java 8
  shell: /bin/echo debconf shared/accepted-oracle-license-v1-1 seen true | /usr/bin/debconf-set-selections
  become: yes

- name: Install Java 8
  apt: 
    name: oracle-java8-installer 
    state: latest 
    update-cache: yes
  become: yes

- name: Add Jenkins key
  become: yes
  apt_key:
    url: https://pkg.jenkins.io/debian/jenkins.io.key
    state: present

- name: Add official APT repository
  become: yes
  apt_repository:
    repo: "deb https://pkg.jenkins.io/debian binary/"

- name: Update apt packages
  apt:
    update_cache: true

- name: Install Jenkins
  apt:
    name: jenkins
    state: latest
    update_cache: yes

- name: Install packages [Git, Pip, Pip3, Maven, MySQL, Nginx]
  apt: name={{ item }} state=present
  with_items:
    - git
    - python-pip
    - python3-pip
    - maven
    - mysql-server
    - nginx

- name: Correct GitHub repository permissions
  shell: chmod -R 777 /home/vagrant/CSC519DevOps-Project
  become: yes

- name: Copy Jenkins' config file
  copy:
    remote_src: True
    src: /home/vagrant/CSC519DevOps-Project/jenkins/roles/jenkins/files/jenkins
    dest: /etc/default/jenkins
    mode: 777

- name: Start Jenkins
  service:
    name: jenkins 
    state: restarted

- name: Wait for Jenkins to start
  wait_for:
    port: "{{ jenkins_port }}"
    delay: "{{ jenkins_delay }}"
    
- name: Copy Jenkins' config file
  copy:
    remote_src: True
    src: /home/vagrant/CSC519DevOps-Project/jenkins/roles/jenkins/files/jenkins_config.xml
    dest: /var/lib/jenkins/config.xml
    mode: 777

- name: Allow Jenkins to run as the super user
  replace:
    path: /etc/default/jenkins
    regexp: '^JENKINS_USER=\$NAME' 
    replace: 'JENKINS_USER="root"'

- name: Restart Jenkins
  service:
    name: jenkins 
    state: restarted

- name: Wait for Jenkins to restart
  wait_for:
    port: "{{ jenkins_port }}"
    delay: "{{ jenkins_delay }}"

- name: Download Jenkins CLI jar
  get_url:
    url: "{{ jenkins_cli_jar }}"
    dest: "{{ jenkins_jar_location }}"
    mode: 755

- name: Install Jenkins' Plugins
  command: java -jar "{{ jenkins_jar_location }}" -s "{{ jenkins_url }}" install-plugin "{{ item }}"
  with_items:
    - git
    - maven-plugin
    - nodejs
    - postbuild-task
    - envinject
    - jacoco
    - junit
    - build-timeout


- name: Restart Jenkins
  service:
    name: jenkins 
    state: restarted

- name: Wait for Jenkins to restart
  wait_for:
    port: "{{ jenkins_port }}"
    delay: "{{ jenkins_delay }}"

- name: Install Jenkins Job Builder (JJB)
  pip: name={{ item }} state=present executable=pip3
  with_items:
    jenkins-job-builder
    python-jenkins
    
- name: Create Jenkins Job directory
  file:
    path: /etc/jenkins_jobs
    state: directory
    mode: 644

- name: Copy Jenkins jobs config
  copy:
    remote_src: True
    src: /home/vagrant/CSC519DevOps-Project/jenkins/roles/jenkins/files/jenkins_jobs.ini
    dest: /etc/jenkins_jobs/jenkins_jobs.ini
    mode: 644
